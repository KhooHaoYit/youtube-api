// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator nestgraphql {
  provider                        = "node node_modules/prisma-nestjs-graphql"
  output                          = "../src/@generated"
  purgeOutput                     = true
  graphqlScalars_BigInt_name      = "GraphQLBigInt"
  graphqlScalars_BigInt_specifier = "graphql-scalars"
}

// TODO: comments

// TODO: clip
// https://www.youtube.com/clip/Ugkxes0UO1XgIY9LlLaisU2a3Le5i8tYkuPe
// https://www.youtube.com/clip/UgkxBQ0tuOU8BR1QJ-O5fimqZ2isMfzFaA-b
// https://www.youtube.com/clip/Ugkx_7XH_e-kdkArvpXV_FIirSfYe_m3ymkl

model CommunityPost {
  id String @id

  content       String?
  replyCount    Int?
  likeCount     Int?
  publishedTime String?
  extra         Json?

  channelId String?
  channel   Channel? @relation(fields: [channelId], references: [id])

  i_createdAt DateTime @default(now())
  i_updatedAt DateTime @updatedAt

  @@index([channelId])
}

// TODO: some random stuff
// https://www.youtube.com/playlist?list=OLAK5uy_npZucV05HRrJHGekuyEETUfd6jn24sOm4 (get large thumbnail)
// https://www.youtube.com/channel/UCYfdidRxbB8Qhf0Nx7ioOYw/sports
// https://www.youtube.com/channel/UCEgdi0XIXXZ-qJOFPf4JSKw/sportstab
// https://www.youtube.com/channel/UC-9-kyTW8ZkZNDHQJ6FgpwQ/community

model Playlist {
  // TODO: Temporarily List
  // video_ids,title,more_url,type,index,feature
  // https://www.youtube.com/watch?v=Ze2nSsLJDaY
  // https://youtube.com/watch_videos?title=Duskers+Challenges+2023-12-29&video_ids=WZ1tiLFJmjg
  // https://www.youtube.com/watch?v=he3CDqJhBNY
  // http://www.youtube.com/watch_videos?video_ids=YFMNfjo-8To%2C9qt5ui3P9QA%2Che3CDqJhBNY%2CorDNt0SW9e8%2C9nXOV7bwl78%2CQkypqltOL_M%2CEhrmgCBtMZg%2CxtBJsKSM33M&feature=c4-overview&title=Crazy+Router+Lathe&more_url=&type=0

  // TODO: Mixes
  // /RD(MM)?(videoId)?/ ! My Mix
  // /RDCM(channelId)/ !
  // /RDGMEM(category)(VM(videoId))?/
  // /RDC(albumIdWithoutO)/ ??
  // https://www.youtube.com/watch?v=1IVfW_rvxQw&list=RDGMEMXdNDEg4wQ96My0DhjI-cIg
  // https://www.youtube.com/watch?v=fokontvrio0&list=RDGMEMQ1dJ7wXfLlqCjwV0xfSNbA
  // https://www.youtube.com/watch?v=fJaNISDyhZE&list=RDGMEMYH9CUrFO7CfLJpaD7UR85wVMfJaNISDyhZE
  // https://www.youtube.com/watch?v=3AGfHOYaoMs&list=RDGMEMYH9CUrFO7CfLJpaD7UR85wVM3AGfHOYaoMs
  // https://www.youtube.com/watch?v=xMpTFCca9qo&list=RDGMEMhCgTQvcskbGUxqI4Sn2QYwVMxMpTFCca9qo
  // https://www.youtube.com/watch?v=Rb463TodXJA&list=RDGMEMCMFH2exzjBeE_zAHHJOdxgVMRb463TodXJA
  // https://www.youtube.com/watch?v=fokontvrio0&list=RDGMEMJQXQAmqrnmK1SEjY_rKBGAVMfokontvrio0
  // https://www.youtube.com/watch?v=vKkoBUPav3s&list=RDCLAK5uy_k5n4srrEB1wgvIjPNTXS9G1ufE9WQxhnA
  // https://www.youtube.com/watch?v=FkOpwodhROI&list=RDCLAK5uy_kmPRjHDECIcuVwnKsx2Ng7fyNgFKWNJFs
  // https://www.youtube.com/watch?v=eB6txyhHFG4&list=RDCLAK5uy_lBNUteBRencHzKelu5iDHwLF6mYqjL-JU
  // https://www.youtube.com/watch?v=c5j7lpWprro&list=RDCLAK5uy_nbK9qSkqYZvtMXH1fLCMmC1yn8HEm0W90
  // https://www.youtube.com/watch?v=dhMdqqAng8E&list=RDCLAK5uy_k-msS6PWOCGNcJo7gx0NQIPfyFzHglYEk

  // TODO: Watch later
  // https://www.youtube.com/playlist?list=WL

  id String @id @unique

  title            String?
  view             Int?
  estimatedCount   Int?
  lastUpdated      String?
  description      String?
  visibility       String?
  unviewableReason String?

  badges          String[]
  videoIds        String[]
  extraChannelIds Json?
  seasons         Json?

  channelId String?
  channel   Channel? @relation(fields: [channelId], references: [id])

  i_createdAt DateTime @default(now())
  i_updatedAt DateTime @updatedAt
}

model Video {
  // TODO: store
  // TODO: fundraiser
  // TODO: chapters
  // https://youtu.be/EwGAcKnE-y4
  // TODO: watch time heatmap
  // TODO: video badges (ratings, age restriction)
  // https://youtu.be/XmxZoBLzSSw
  // https://youtu.be/1XOo1OJFAeQ
  id            String      @id @unique
  visibility    Visibility?
  removedReason String?

  title       String?
  description String?

  keywords           String[]
  category           String?
  publishDate        String?
  uploadDate         String?
  liveStartTimestamp DateTime?
  liveEndTimestamp   DateTime?
  viewCount          BigInt?
  duration           Int?

  isLivestream    Boolean?
  isAgeRestricted Boolean?

  isMembershipContent    Boolean?
  minimumMembershipLevel String?

  channelId String?
  channel   Channel? @relation(fields: [channelId], references: [id])

  i_createdAt DateTime @default(now())
  i_updatedAt DateTime @updatedAt

  @@index([channelId])
}

enum Visibility {
  public
  unlisted
  private
  deleted
  removed
}

model Channel {
  id String @unique

  name        String?
  handle      String?
  avatarUrl   String?
  bannerUrl   String?
  description String?
  location    String?
  joinedAt    String?
  artistBio   String?

  viewCount       BigInt?
  subscriberCount Int?

  verified              Boolean?
  haveBusinessEmail     Boolean?
  haveMembershipFeature Boolean?

  releases         String[]
  featuredDisplay  Json?
  playlistsDisplay Json?
  // gone??
  channels         Json?
  links            Json?
  membershipOffers Json?
  membershipBadges Json?

  videos         Video[]
  playlists      Playlist[]
  communityPosts CommunityPost[]

  i_createdAt DateTime @default(now())
  i_updatedAt DateTime @updatedAt
}
